name: 🚀 Compilar, probar y publicar versión

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout del código
        uses: actions/checkout@v4

      - name: 🧩 Configurar entorno .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: 📦 Restaurar dependencias
        run: dotnet restore

      - name: 🛠️ Compilar aplicación
        run: dotnet build --configuration Release --no-restore

      - name: 🧪 Ejecutar pruebas unitarias con cobertura
        run: |
          dotnet test --configuration Release --no-build \
            /p:CollectCoverage=true \
            /p:CoverletOutput=TestResults/coverage/ \
            /p:CoverletOutputFormat=lcov

      - name: 📊 Instalar reportgenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: 📈 Generar reporte HTML de cobertura
        run: |
          reportgenerator -reports:./**/coverage.info -targetdir:coverage-report -reporttypes:Html

      - name: 🚀 Publicar cobertura en GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage-report

      - name: 🏷️ Crear Release automático
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Versión automática ${{ github.run_number }}"
          body: |
            🚀 Nueva versión publicada automáticamente.
            - Compilación exitosa
            - Tests ejecutados y reporte de cobertura disponible en GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
